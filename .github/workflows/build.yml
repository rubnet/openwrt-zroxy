name: Build OpenWRT with zroxy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up OpenWRT build environment
        run: |
          sudo apt update
          #sudo apt install gcc-arm-none-eabi
          #sudo apt install -y build-essential libncurses5-dev gawk zlib1g-dev asciidoc binutils
          

      - name: Clone OpenWRT repo
        run: |
          rm -rf openwrt
          [ -f openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64.tar.xz ] || wget https://downloads.openwrt.org/releases/21.02.7/targets/mvebu/cortexa53/openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          [ -d openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64 ] || tar -xf openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          cd openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64
          #ls openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl*
          #ls staging_dir/*

          
          #git clone https://github.com/openwrt/openwrt.git
          #cd openwrt
          #git branch -a
          #git tag
          #git checkout openwrt-21.02
          #./scripts/feeds update -a
          #./scripts/feeds install -a

      - name: Clone zroxy repository
        run: |
          cd openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64/
          git clone https://github.com/0x7a657573/zroxy.git

      - name: Automate Configure OpenWRT
        run: |
          openwrt_architecture_host=aarch64-openwrt-linux-musl
          cd openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64/zroxy
          #./configure  --host=$openwrt_architecture_host --enable-static

          # make menuconfig
          #grep zroxy .config
          # For example, enabling zroxy package via configuration
          #sed -i 's/^#CONFIG_PACKAGE_zroxy=y/CONFIG_PACKAGE_zroxy=y/' .config
          #grep zroxy .config

      - name: Compile OpenWRT with zroxy package
        run: | 
          
          
          openwrt_architecture_host=aarch64-openwrt-linux-musl
          cd openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64/
          
          openwrt_sdk_folder=$(pwd)
          openwrt_toolchain=toolchain-aarch64_cortex-a53_gcc-8.4.0_musl
          PATH="$PATH:$openwrt_sdk_folder/staging_dir/$openwrt_toolchain/bin/"
          export PATH
          
          STAGING_DIR="$openwrt_sdk_folder/staging_dir/$openwrt_toolchain/"
          export STAGING_DIR
          echo '/home/runner/work/zroxy/zroxy/openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64----------------------------------------------------------------------'
          ls $STAGING_DIR/bin/*
          
          cd zroxy
          
          #make zroxy/{clean,compile}  V=s
          export CC="aarch64-openwrt-linux-musl -static -Os"
          cmake 
          
          [-f ./configure ]&&./configure  --host=$openwrt_architecture_host --enable-static
          
          make zroxy/compile CC=aarch64-openwrt-linux-musl LD=aarch64-openwrt-linux-musl-ld 
          ls openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64/*

      - name: Upload compiled zroxy firmware
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: openwrt-sdk-21.02.7-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64/bin/
